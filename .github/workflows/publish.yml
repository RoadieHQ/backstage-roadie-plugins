name: publish
on:
  push:
    branches:
      - main
jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@main
    - name: Set up Node.js
      uses: actions/setup-node@main
      with:
        node-version: 14.x
    - run: yarn install --frozen-lockfile
    - run: yarn tsc
    - run: yarn build
    
    - name: Create Release Pull Request
      uses: changesets/action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Define ${CURRENT_VERSION}
    - name: Set Current Version
      run: |
        CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
        echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
        - name: Create Git Tag
      uses: pkgdeps/git-tag-action@v2
      with:
        version: ${{ env.CURRENT_VERSION }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_repo: ${{ github.repository }}
        git_commit_sha: ${{ github.sha }}
        git_tag_prefix: "v"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.CURRENT_VERSION }}
        # Copy Pull Request's tile and body to Release Note
        release_name: ${{ github.event.pull_request.title }}
        body: |
          ${{ github.event.pull_request.body }}
        draft: false
        prerelease: false

    - name: 'Login to npmjs npm repo .npmrc'
      shell: bash
      run: |
        echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_AUTH_TOKEN}}" >> .npmrc
        echo "_auth = ${{ secrets.NPM_CONFIG__AUTH }}" >> .npmrc
        echo "always-auth = true" >> .npmrc

    # Publishes current version of packages that are not already present in the registry.
    - name: Run publish
      run: |
        git config --global user.email "bot@roadie.io"
        git config --global user.name "roadie-bot"
        lerna publish from-package --yes --no-verify-access
